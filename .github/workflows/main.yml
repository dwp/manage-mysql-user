name: Master

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'docs/**'
      - '*.md'

jobs:
  build-app:
    runs-on: ubuntu-latest
    needs: [get-publish-version]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build and test
        run: |
          mkdir -p artifacts
          sudo pip --quiet install -r requirements.txt -t artifacts
          cp manage-mysql-user.py artifacts/
          cp *.pem artifacts/
          ls -la artifacts

      - uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: ./artifacts

  get-publish-version:
    runs-on: ubuntu-latest
    outputs:
      publish-version: ${{ steps.get-publish-version.outputs.publish-version }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifacts
      - name: Prepare SemVer
        id: prepare-semver
        run: |
          cd ./artifacts
          set +o pipefail
          LATEST_VERSION=$(curl --silent "https://api.github.com/repos/${{ github.repository }}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          set -o pipefail
          [  -z "$LATEST_VERSION" ] && LATEST_VERSION="0.0.0"
          echo "latest_version_out=$LATEST_VERSION" >> $GITHUB_OUTPUT
          VERSION=$(echo $LATEST_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          zip -r manage-mysql-user-$VERSION.zip *
          commit_message=$( echo "${{ github.event.head_commit.message }}" | sed 's/"//g')
          if [[ "${commit_message,,}" == *"major release"* ]]; then
            echo "semver_increment='m'" >> $GITHUB_OUTPUT
          elif [[ "${commit_message,,}" == *"minor release"* ]]; then
            echo "semver_increment='i'" >> $GITHUB_OUTPUT
          else
            echo "semver_increment='p'" >> $GITHUB_OUTPUT
          fi
      
      - name: Increment SemVer
        id: semver
        uses: matt-FFFFFF/simple-semver@v0.1.0
        with:
          semver-input: ${{ steps.prepare-semver.outputs.latest_version_out }}
          increment: ${{ steps.prepare-semver.outputs.semver_increment }}
      
      - name: Get publish version
        id: get-publish-version
        run: |
          echo "publish-version=${{ steps.semver.outputs.semver }}" >> $GITHUB_OUTPUT
  
  
  publish-github-release:
    runs-on: ubuntu-latest
    needs: [build-app, get-publish-version]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.get-publish-version.outputs.publish-version }}
          release_name: ${{ needs.get-publish-version.outputs.publish-version }}
          draft: false
          prerelease: false