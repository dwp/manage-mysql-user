# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            sudo pip --quiet install -r requirements.txt
            pip install --quiet --user bump2version
            mkdir -p artifacts
            cp manage-mysql-user.py artifacts/
            cd artifacts
            set +o pipefail
            LATEST_VERSION=$(curl --silent "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/releases/latest" | jq -r '.tag_name // empty')
            set -o pipefail
            [  -z "$LATEST_VERSION" ] && LATEST_VERSION="0.0.0"
            VERSION=$(bump2version minor --allow-dirty --current-version $LATEST_VERSION --list | grep new_version | cut -f2 -d=)
            zip -r manage-mysql-user-$VERSION.zip *
      - persist_to_workspace:
          root: artifacts
          paths:
            - manage-mysql-user-*.zip
  publish-github-release:
      docker:
        - image: cibuilds/github:0.10
      steps:
        - attach_workspace:
            at: ./artifacts
        - run:
            name: "Publish Release on GitHub"
            command: |
              ls -la artifacts
              LATEST_VERSION=$(curl --silent "https://api.github.com/repos/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
              VERSION=$(echo $LATEST_VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
              echo "ghr -t GITHUB_TOKEN -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/"
              ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - publish-github-release:
          requires:
            - build
          filters:
            branches:
              only: master
